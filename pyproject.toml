[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "taskforge"
dynamic = ["version"]
description = "A comprehensive, extensible task management platform for developers and teams"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "TaskForge Community", email = "maintainers@taskforge.dev"}
]
keywords = ["task", "todo", "productivity", "project-management", "cli", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.8.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "python-dateutil>=2.8.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "httpx>=0.24.0",
    "croniter>=1.3.0",
    "apscheduler>=3.10.0",
    "pyjwt>=2.6.0",
    "bcrypt>=4.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "aiofiles>=23.0.0",
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "faker>=18.0.0",
]
web = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "pandas>=2.0.0",
]
integrations = [
    "slack-sdk>=3.20.0",
    "pygithub>=1.58.0",
    "notion-client>=2.0.0",
    "trello>=0.9.0",
    "asana>=3.0.0",
]
postgres = [
    "asyncpg>=0.28.0",
    "psycopg2-binary>=2.9.0",
]
mysql = [
    "aiomysql>=0.2.0",
    "pymysql>=1.0.0",
]
all = [
    "taskforge[dev,web,integrations,postgres,mysql]"
]

[project.urls]
Homepage = "https://github.com/taskforge-community/taskforge"
Documentation = "https://docs.taskforge.dev"
Repository = "https://github.com/taskforge-community/taskforge.git"
"Bug Tracker" = "https://github.com/taskforge-community/taskforge/issues"
"Changelog" = "https://github.com/taskforge-community/taskforge/blob/main/CHANGELOG.md"

[project.scripts]
taskforge = "taskforge.cli:main"
tf = "taskforge.cli:main"

[project.entry-points."taskforge.plugins"]
# Plugin entry points for extensibility

[tool.setuptools]
packages = ["taskforge"]

[tool.setuptools_scm]
write_to = "taskforge/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["taskforge"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=taskforge",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["taskforge"]
omit = [
    "*/tests/*",
    "*/test_*",
    "taskforge/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]